{"ast":null,"code":"var _jsxFileName = \"G:\\\\experience\\\\AI TEST\\\\aitest\\\\src\\\\container\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./Home.css\";\nimport { ReactComponent as Sun } from \"../assests/Sun.svg\";\nimport { ReactComponent as Moon } from \"../assests/Moon.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [theme, setTheme] = useState('light');\n  const setDarkMode = () => {\n    document.querySelector('body').setAttribute('data-theme', 'dark');\n    localStorage.setItem('selectedTheme', 'dark');\n    setTheme('dark'); // Update state\n  };\n  const setLightMode = () => {\n    document.querySelector('body').setAttribute('data-theme', 'light');\n    localStorage.setItem('selectedTheme', 'light');\n    setTheme('light'); // Update state\n  };\n  const toggleTheme = e => {\n    if (e.target.checked) setDarkMode();else setLightMode();\n  };\n  const api = \"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\";\n  const ain = document.querySelector('.ain');\n  const getain = async () => {\n    const inp = document.getElementById('inp');\n    //make a request\n    const methods = {\n      method: \"POST\",\n      header: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${api}`\n      },\n      body: JSON.stringify({\n        \"sea\": inp.value,\n        \"n\": 3,\n        \"size\": \"256x256\"\n      })\n    };\n    const res = await fetch(\"https://api.openai.com/v1/images/generations\", methods);\n    //parse the reponse as json\n    const data = await res.json();\n    console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tit\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI TEST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dark_modes\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"dark_mode_inputs\",\n          type: \"checkbox\",\n          id: \"darkmode-toggle\",\n          onChange: toggleTheme,\n          checked: theme === 'dark' // Reflect theme in the checkbox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"dark_mode_labels\",\n          htmlFor: \"darkmode-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(Sun, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Moon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"half\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"AI Images Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ain\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sea\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"inp\",\n        src: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getain,\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","ReactComponent","Sun","Moon","jsxDEV","_jsxDEV","Home","_s","theme","setTheme","setDarkMode","document","querySelector","setAttribute","localStorage","setItem","setLightMode","toggleTheme","e","target","checked","api","ain","getain","inp","getElementById","methods","method","header","body","JSON","stringify","value","res","fetch","data","json","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","htmlFor","src","onClick","_c","$RefreshReg$"],"sources":["G:/experience/AI TEST/aitest/src/container/Home.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport \"./Home.css\"\r\nimport { ReactComponent as Sun } from \"../assests/Sun.svg\";\r\nimport { ReactComponent as Moon } from \"../assests/Moon.svg\";\r\n\r\nfunction Home() {\r\n\r\n  const [theme, setTheme] = useState('light');\r\n\r\n  const setDarkMode = () => {\r\n    document.querySelector('body').setAttribute('data-theme', 'dark');\r\n    localStorage.setItem('selectedTheme', 'dark');\r\n    setTheme('dark'); // Update state\r\n  };\r\n\r\n  const setLightMode = () => {\r\n    document.querySelector('body').setAttribute('data-theme', 'light');\r\n    localStorage.setItem('selectedTheme', 'light');\r\n    setTheme('light'); // Update state\r\n  };\r\n\r\n\r\n  const toggleTheme = (e) => {\r\n    if (e.target.checked) setDarkMode();\r\n    else setLightMode();\r\n  };\r\n\r\n    const api= \"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\";\r\n    \r\n    const ain= document.querySelector('.ain');\r\n\r\n\r\n    const getain = async () => {\r\n      const inp = document.getElementById('inp');\r\n      //make a request\r\n        const methods = {\r\n          method:\"POST\",\r\n          header:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${api}`,\r\n          },\r\n          body:JSON.stringify({\r\n              \"sea\":inp.value,\r\n              \"n\":3,\r\n              \"size\": \"256x256\"\r\n            }),\r\n            \r\n          \r\n        };\r\n        const res = await fetch(\"https://api.openai.com/v1/images/generations\", methods)\r\n          //parse the reponse as json\r\n          const data = await res.json();\r\n          console.log(data);\r\n    };\r\n\r\n  return (\r\n    <section>\r\n   <div className='tit'>\r\n        <h1>AI TEST</h1>\r\n        <div className='dark_modes'>\r\n          <input\r\n            className='dark_mode_inputs'\r\n            type='checkbox'\r\n            id='darkmode-toggle'\r\n            onChange={toggleTheme}\r\n            checked={theme === 'dark'} // Reflect theme in the checkbox\r\n          />\r\n          <label className='dark_mode_labels' htmlFor='darkmode-toggle'>\r\n            <Sun />\r\n            <Moon />\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='half'>\r\n        <h2>AI Images Generator</h2>\r\n      </div>\r\n\r\n      <div className='ain'>\r\n      \r\n      </div>\r\n\r\n      <div className='sea'>\r\n      <input id='inp' src='text'></input>\r\n      <button onClick={getain}>Generate</button>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}